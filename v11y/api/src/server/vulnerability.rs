use actix_web::{get, post, web, HttpResponse, Responder};
use v11y_client::Vulnerability;

use crate::SharedState;

/// Record vulnerability information
#[utoipa::path(
    post,
    tag = "v11y",
    path = "/api/v1/vulnerability/{id}",
    responses(
        (status = 200, description = "registered"),
        (status = BAD_REQUEST, description = "Missing valid id"),
    ),
)]
#[post("/vulnerability/{id}")]
pub(crate) async fn add(
    _state: web::Data<SharedState>,
    _id: web::Path<String>,
    _vuln: web::Json<Vulnerability>,
) -> actix_web::Result<impl Responder> {
    Ok(HttpResponse::Ok().finish())
}

/// Retrieve vulnerability information
#[utoipa::path(
    get,
    tag = "v11y",
    path = "/api/v1/vulnerability/{id}",
    responses(
        (status = 200, description = "Collector registered"),
        (status = BAD_REQUEST, description = "Missing valid id"),
    ),
)]
#[get("/vulnerability/{id}")]
pub(crate) async fn get(_state: web::Data<SharedState>, _id: web::Path<String>) -> actix_web::Result<impl Responder> {
    Ok(HttpResponse::Ok().finish())
}
